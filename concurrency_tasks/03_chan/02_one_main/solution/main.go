package main

import "fmt"

// Объясните работу программы
// Что здесь не так? Почему это происходит?

func main() {
	fmt.Println("main() started")

	c := make(chan string)
	c <- "John"

	fmt.Println("main() stopped")
}

// Deadlock (Взаимная блокировка) fatal error: all goroutines are asleep - deadlock!

// Если вы попытаетесь считать данные из канала, но в канале будут отсутствовать данные, планировщик 
// заблокирует текущую горутину и разблокирует другую в надежде, что какая-либо горутина передаст 
// данные в канал. То же самое произойдет в случае отправки данных: планировщик заблокирует
// передающую горутину, пока другая не считает данные из канала.
// Примером deadlock может быть main горутина, которая эксклюзивно производит операции с каналом.
